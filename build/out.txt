@name clua_compiler_output
@persist [Instace Ctx]:table

#include "lua/clua"

if(first()){
    local Code = table("_Type" = 10, 1 = table("_Type" = 2, 1 = table("_Type" = 15, 1 = "print"), 2 = table(1 = table("_Type" = 20, 1 = 2, 2 = table("_Type" = 17, 1 = 3, 2 = 1)))), 2 = table("_Type" = 2, 1 = table("_Type" = 15, 1 = "print"), 2 = table(1 = table("_Type" = 20, 1 = 2, 2 = table("_Type" = 17, 1 = 3, 2 = 0)))), 3 = table("_Type" = 2, 1 = table("_Type" = 15, 1 = "print"), 2 = table(1 = table("_Type" = 20, 1 = 2, 2 = table("_Type" = 17, 1 = 8)))), 4 = table("_Type" = 2, 1 = table("_Type" = 15, 1 = "print"), 2 = table(1 = table("_Type" = 20, 1 = 3, 2 = table("_Type" = 17, 1 = 4, 2 = "123")))), 5 = table("_Type" = 2, 1 = table("_Type" = 15, 1 = "print"), 2 = table(1 = table("_Type" = 20, 1 = 2, 2 = table("_Type" = 17, 1 = 5, 2 = 1)))), 6 = table("_Type" = 2, 1 = table("_Type" = 15, 1 = "print"), 2 = table(1 = table("_Type" = 20, 1 = 2, 2 = table("_Type" = 17, 1 = 5, 2 = 1)))), 7 = table("_Type" = 2, 1 = table("_Type" = 15, 1 = "print"), 2 = table(1 = table("_Type" = 20, 1 = 2, 2 = table("_Type" = 17, 1 = 5, 2 = 0)))), 8 = table("_Type" = 2, 1 = table("_Type" = 15, 1 = "print"), 2 = table(1 = table("_Type" = 17, 1 = 5, 2 = -10)))) 
    Instace = cluaInstance()
    Func = Instace:cluaToFunc(Code)
    Ctx = Func:cluaCreateFuncContext()
    
    runOnTick(1)
}

if(tickClk()){
    if(Ctx:cluaContextExecute(80)){
        runOnTick(0)
    }
}
